//-------------TaskList start-------------------------

import React, { useContext, useEffect, useState } from "react";
import { CartContext } from "../context/Mydata";
import { MyDropdown4 } from "./MyDropDown4";
import TempList from "./TempList";
import OxyList from "./OxyList";
import "./style.css";
import { Charts } from "./Charts";
import TotalList from "./TotalList";
import { AllCharts } from "./AllCharts";
import { TempCharts } from "./TempCharts";
import { OxyCharts } from "./OxyCharts";
import CustomDataList from "./CustomDataList";
import { CustomDataCharts } from "./CustomDataCharts";
const TaskList = ({ getTaskId, currDate, props, drop, setDrop }) => {
  const { handleDrop, dropdn, tempVal, setTempVal } = useContext(CartContext);
  const [dropValue, setDropValue] = useState("temp");
  // const [task, setTask] = useState([]);

  return (
    <div className="listcontain">
      <div className="dropvalue">
        <MyDropdown4 dropValue={dropValue} setDropValue={setDropValue} />
      </div>
      <div className="Listener">
        <div className="list">
          {dropValue === "all" ? (
            <TotalList />
          ) : dropValue === "oxygen" ? (
            <OxyList />
          ) : dropValue === "temperature" ? (
            <TempList />
          ) : (
            <CustomDataList />
          )}
        </div>
        <div className="charts">
          {dropValue === "oxygen" ? (
            <OxyCharts />
          ) : dropValue === "temperature" ? (
            <TempCharts />
          ) : dropValue === "cusData" ? (
            <CustomDataCharts />
          ) : (
            <Charts />
          )}
          <h5 style={{ paddingLeft: " 170px" }}>{dropValue} Charts</h5>
        </div>
      </div>
    </div>
  );
};

export default TaskList;


//-------------------TaskList Ends-------------------------------------



<Form.Group className="mb-3" controlId="formunit">
                <div style={{ display: "flex" }}>
                  <div
                    style={{
                      border: "1px solid grey",
                      borderRadius: "5px",
                      width: "50px",
                      textAlign: "center",
                      backgroundColor: "#e9ecef",
                      borderRight: "0px",
                      borderTopRightRadius: "0px",
                      borderBottomRightRadius: "0px",
                      height: "29px",
                    }}
                  >
                    <label id="formTempTitle">Date</label>
                  </div>
                  <div>
                    <DatePicker
                      selected={date}
                      value={currDate}
                      currDate={currDate}
                      setCurrDate={setCurrDate}
                      onChange={(e) => setCurrDate(e.target.value)}
                    />
                  </div>
                </div>
              </Form.Group>


              //---------------------------- task list-------------------


                <div className="dropvalue">
        <MyDropdown4 dropValue={dropValue} setDropValue={setDropValue} />
      </div>


      ///---------------------------date input---------------------------

       <div className="pick">
                  <Form.Group className="mb-3" controlId="formunit">
                    <div style={{ display: "flex" }}>
                      <div
                        style={{
                          border: "1px solid grey",
                          borderRadius: "5px",
                          width: "50px",
                          textAlign: "center",
                          backgroundColor: "#e9ecef",
                          borderRight: "0px",
                          borderTopRightRadius: "0px",
                          borderBottomRightRadius: "0px",
                          height: "29px",
                        }}
                      >
                        <label id="formTempTitle">Date</label>
                      </div>
                      <div>
                        <DatePicker
                          selected={date}
                          value={currDate}
                          currDate={currDate}
                          setCurrDate={setCurrDate}
                          onChange={(e) => setCurrDate(e.target.value)}
                        />
                      </div>
                    </div>
                  </Form.Group>
                </div>